name: CI/CD for LoginApi to Ubuntu EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy-loginapi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore packages
        run: dotnet restore LoginApi.csproj

      - name: Build project
        run: dotnet build LoginApi.csproj --configuration Release

      - name: Publish project
        run: dotnet publish LoginApi.csproj -c Release -o ./publish

      - name: Zip published output
        run: zip -r loginapi.zip ./publish

      - name: Upload zip to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "loginapi.zip"
          target: "/home/${{ vars.EC2_USER }}/deploy"

      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # ───── Install .NET Runtime ─────
            wget https://dot.net/v1/dotnet-install.sh
            chmod +x dotnet-install.sh
            ./dotnet-install.sh --channel 8.0 --runtime aspnetcore
            export DOTNET_ROOT=$HOME/.dotnet
            export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools

            # ───── Prepare Deployment Directory ─────
            sudo mkdir -p /var/www/loginapi
            sudo unzip -o /home/${{ vars.EC2_USER }}/deploy/loginapi.zip -d /var/www/loginapi
            sudo chown -R www-data:www-data /var/www/loginapi

            # ───── Validate DLL Exists ─────
            if [ ! -f /var/www/loginapi/LoginApi.dll ]; then
              echo "❌ LoginApi.dll not found after unzip. Deployment aborted."
              exit 1
            fi

            # ───── Create systemd service ─────
            sudo tee /etc/systemd/system/kestrel-loginapi.service > /dev/null << 'EOF'
             [Unit]
             Description=LoginApi .NET Web App
             After=network.target

            [Service]
             WorkingDirectory=/var/www/loginapi
             ExecStart=/home/ubuntu/.dotnet/dotnet /var/www/loginapi/LoginApi.dll
            Restart=always
            RestartSec=10
            KillSignal=SIGINT
            SyslogIdentifier=loginapi
            User=www-data
            Environment=ASPNETCORE_ENVIRONMENT=Production

            [Install] 
             WantedBy=multi-user.target
             EOF

            # ───── Reload and Start Service ─────
            sudo systemctl daemon-reload
            sudo systemctl enable kestrel-loginapi.service
            sudo systemctl restart kestrel-loginapi.service
