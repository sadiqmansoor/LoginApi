name: CI/CD for LoginApi to Ubuntu EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy-loginapi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install .NET 8 SDK
        run: |
          wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
          chmod +x ./dotnet-install.sh
          ./dotnet-install.sh --channel 8.0
          echo "$HOME/.dotnet" >> $GITHUB_PATH

      - name: Restore packages
        run: dotnet restore LoginApi.csproj

      - name: Build project
        run: dotnet build LoginApi.csproj --configuration Release

      - name: Publish project
        run: dotnet publish LoginApi.csproj -c Release -o ./publish

      - name: Zip published output
        run: zip -r loginapi.zip ./publish

      - name: Upload zip to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "loginapi.zip"
          target: "/home/${{ vars.EC2_USER }}/deploy"

      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # ───── Install .NET Runtime if Missing ─────
            if ! command -v dotnet &> /dev/null; then
              sudo wget https://dot.net/v1/dotnet-install.sh -O /usr/local/bin/dotnet-install.sh
              sudo chmod +x /usr/local/bin/dotnet-install.sh
              sudo /usr/local/bin/dotnet-install.sh --runtime aspnetcore --channel 8.0 --install-dir /usr/share/dotnet
              export PATH=$PATH:/usr/share/dotnet
            fi

            # ───── Install PostgreSQL ─────
            sudo apt-get update
            sudo apt-get install -y postgresql postgresql-contrib
            sudo systemctl enable postgresql
            sudo systemctl start postgresql

            # ───── Create PostgreSQL User & DB (if needed) ─────
            sudo -u postgres psql -c "DO \$\$ BEGIN IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'loginuser') THEN CREATE ROLE loginuser WITH LOGIN PASSWORD 'admin123'; END IF; END \$\$;"
            DB_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='logindb'")
            if [ "$DB_EXISTS" != "1" ]; then
              sudo -u postgres createdb -O loginuser logindb
            fi

            # ───── Prepare Deployment Directory ─────
            sudo mkdir -p /var/www/loginapi
            sudo unzip -o /home/${{ vars.EC2_USER }}/deploy/loginapi.zip -d /var/www/loginapi
            sudo chown -R www-data:www-data /var/www/loginapi

            # ───── Create kestrel-loginapi.service if Missing ─────
            SERVICE_PATH="/etc/systemd/system/kestrel-loginapi.service"
            if [ ! -f "$SERVICE_PATH" ]; then
              sudo tee "$SERVICE_PATH" > /dev/null << 'EOF'
              [Unit]
                Description=LoginApi .NET Web App

              [Service]
               WorkingDirectory=/var/www/loginapi
               ExecStart=/usr/bin/dotnet /var/www/loginapi/LoginApi.dll
               Restart=always
               RestartSec=10
               KillSignal=SIGINT
               SyslogIdentifier=loginapi
               User=www-data
              Environment=ASPNETCORE_ENVIRONMENT=Production

            [Install]
             WantedBy=multi-user.target
             EOF
               sudo systemctl daemon-reload
               sudo systemctl enable kestrel-loginapi.service
             fi

            # ───── Restart the Service ─────
            sudo systemctl restart kestrel-loginapi.service
