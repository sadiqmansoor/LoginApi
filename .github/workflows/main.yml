name: CI/CD for LoginApi to Ubuntu EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy-loginapi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore packages
        run: dotnet restore LoginApi.csproj

      - name: Build project
        run: dotnet build LoginApi.csproj --configuration Release

      - name: Publish project
        run: dotnet publish LoginApi.csproj -c Release -o ./publish

      - name: Zip published output
        run: zip -r loginapi.zip ./publish

      - name: Upload zip to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "loginapi.zip"
          target: "/home/${{ vars.EC2_USER }}/deploy"

      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/loginapi
            sudo unzip -o /home/${{ vars.EC2_USER }}/deploy/loginapi.zip -d /var/www/loginapi
            sudo chown -R www-data:www-data /var/www/loginapi

            SERVICE_PATH="/etc/systemd/system/kestrel-loginapi.service"
            if [ ! -f "$SERVICE_PATH" ]; then
              sudo tee "$SERVICE_PATH" > /dev/null << 'EOF'
            [Unit]
             Description=LoginApi .NET Web App

            [Service]
             WorkingDirectory=/var/www/loginapi
             ExecStart=/usr/bin/dotnet /var/www/loginapi/LoginApi.dll
             Restart=always
             RestartSec=10
             KillSignal=SIGINT
             SyslogIdentifier=loginapi
             User=www-data
             Environment=ASPNETCORE_ENVIRONMENT=Production

            [Install]
            WantedBy=multi-user.target
            EOF
              sudo systemctl daemon-reload
              sudo systemctl enable kestrel-loginapi.service
            fi

            sudo systemctl restart kestrel-loginapi.service
